blueprint:
  name: Hue dimmer switch v2 with scenes
  description: Toggle lights and activate scenes with Hue dimmer switches
  source_url: https://github.com/GordonFreemanK/ha-blueprints/blob/main/hue_dimmer_switch_v2_scenes.yaml
  domain: automation
  input:
    switches:
      name: Switches
      description: The switches that toggle the lights
      selector:
        device:
          filter:
          - model: Hue dimmer switch (929002398602)
          multiple: true
    scenes:
      name: Scenes
      description: The scenes to cycle with the switches
      selector:
        entity:
          domain: scene
          multiple: true
    scene_input:
      name: Scene input
      description: The input in which to store the current scene
      selector:
        entity:
          domain: input_text
mode: restart
max_exceeded: silent

trigger:
- platform: mqtt
  topic: zigbee2mqtt/+/action

variables:
  device_name: "{{ trigger.topic | regex_replace('zigbee2mqtt/(.+)/action','\\g<1>') }}"
  payload: "{{ trigger.payload }}"
  switches: !input switches
  scenes: !input scenes
  scene_input: !input scene_input
  lights: >
    {% set scene_entities = expand(scenes) | map(attribute='attributes.entity_id') %}
    {{ expand(scene_entities) | map(attribute='entity_id') | list }}

condition:
- condition: template
  value_template: "{{ device_name in switches | map('device_attr','name') }}"
- condition: template
  value_template: "{{ payload in ['on_press_release','off_press_release','up_press_release','up_hold','down_press_release','down_hold'] }}"

action:
- variables:
    lights_on: "{{ expand(lights) | selectattr('state','eq','on') | map(attribute='entity_id') | list }}"
- choose:
  - conditions: "{{ payload == 'on_press_release' }}"
    sequence:
    - variables:
        state: "{{ lights_on | length > 0 }}"
    - if:
      - condition: template
        value_template: "{{ state }}"
      then:
      - service: light.turn_off
        target:
          entity_id: "{{ lights }}"
        data:
          transition: 0
      - service: input_text.set_value
        data:
          value: ''
        target:
          entity_id: !input scene_input
      else:
      - service: scene.turn_on
        target:
          entity_id: "{{ scenes[0] }}"
        data:
          transition: 0
      - service: input_text.set_value
        data:
          value: "{{ scenes[0] }}"
        target:
          entity_id: !input scene_input
    - repeat:
        for_each: "{{ lights }}"
        sequence:
        - event: light_toggled
          event_data:
            state: "{{ not state }}"
            entity_id: "{{ repeat.item }}"
  - conditions: "{{ payload == 'off_press_release' }}" 
  # on the dimmer switch v2 this is the hue button: we cycle the scene
    sequence:
    - choose:
      - conditions: "{{ lights_on | length > 0 }}"
        sequence:
        - variables:
            scene: >
              {% set ns = namespace(index=0) %}
              {% set scene = states(scene_input) %}
              {% if (scene in scenes) %}
                {% set ns.index = (scenes.index(scene) + 1) % (scenes | length) %}
              {% endif %}
              {{ scenes[ns.index] }}
        - service: scene.turn_on
          target:
            entity_id: "{{ scene }}"
          data:
            transition: 0
        - service: input_text.set_value
          data:
            value: "{{ scene }}"
          target:
            entity_id: !input scene_input
      - conditions: "{{ scenes | length > 1 }}"
        sequence:
        - service: scene.turn_on
          target:
            entity_id: "{{ scenes[1] }}"
          data:
            transition: 0
        - service: input_text.set_value
          data:
            value: "{{ scenes[1] }}"
          target:
            entity_id: !input scene_input
  - conditions: "{{ payload in ['up_press_release','up_hold'] }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ lights_on }}"
      data:
        transition: 1
        brightness_step: 32
  - conditions: "{{ payload in ['down_press_release','down_hold'] }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ lights }}"
      data:
        transition: 1
        brightness_step: -32
