blueprint:
  name: Hue dimmer switch v2
  description: Toggle lights with Hue dimmer switches
  source_url: https://github.com/GordonFreemanK/ha-blueprints/blob/main/hue_dimmer_switch_v2.yaml
  domain: automation
  input:
    switches:
      name: Switches
      description: The switches that toggle the lights
      selector:
        device:
          filter:
          - model: Hue dimmer switch (929002398602)
          multiple: true
    lights:
      name: Lights
      description: The lights to toggle with the switches
      selector:
        entity:
          domain: light
          multiple: true
    brightness:
      name: Brightness
      description: The brightness to turn on the lights at
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: '%'
      default: 80
mode: restart
max_exceeded: silent

trigger:
- platform: mqtt
  topic: zigbee2mqtt/+/action

variables:
  device_name: "{{ trigger.topic | regex_replace('zigbee2mqtt/(.+)/action','\\g<1>') }}"
  payload: "{{ trigger.payload }}"
  switches: !input switches
  lights: !input lights

condition:
- condition: template
  value_template: "{{ device_name in switches | map('device_attr','name') }}"
- condition: template
  value_template: "{{ payload in ['on_press_release','up_press_release','up_hold','down_press_release','down_hold'] }}"

action:
- variables:
    lights_on: "{{ expand(lights) | selectattr('state','eq','on') | map(attribute='entity_id') | list }}"
- choose:
  - conditions: "{{ payload == 'on_press_release' }}"
    sequence:
    - variables:
        state: "{{ lights_on | length > 0 }}"
    - if:
      - condition: template
        value_template: "{{ state }}"
      then:
      - service: light.turn_off
        target:
          entity_id: "{{ lights }}"
        data:
          transition: 1
      else:
      - service: light.turn_on
        target:
          entity_id: "{{ lights }}"
        data:
          transition: 1
          brightness_pct: !input brightness
    - repeat:
        for_each: "{{ lights }}"
        sequence:
        - event: light_toggled
          event_data:
            state: "{{ not state }}"
            entity_id: "{{ repeat.item }}"
  - conditions: "{{ payload in ['up_press_release','up_hold'] }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ lights_on }}"
      data:
        transition: 1
        brightness_step: 32
  - conditions: "{{ payload in ['down_press_release','down_hold'] }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ lights }}"
      data:
        transition: 1
        brightness_step: -32
