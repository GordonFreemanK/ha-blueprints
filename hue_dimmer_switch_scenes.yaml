blueprint:
  name: Hue dimmer switch
  description: Toggle lights with Hue dimmer switches
  source_url: https://github.com/GordonFreemanK/ha-blueprints/blob/main/hue_dimmer_switch_scenes.yaml
  domain: automation
  input:
    switches:
      name: Switches
      description: The switches that toggle the lights
      selector:
        device:
          integration: zha
          manufacturer: Philips
          model: RWL021
          multiple: true
    scenes:
      name: Scenes
      description: The scenes to cycle with the switches
      selector:
        entity:
          domain: scene
          multiple: true
    scene_input:
      name: Scene input
      description: The input in which to store the current scene
      selector:
        entity:
          domain: input_text
mode: restart
max_exceeded: silent

trigger:
- platform: event
  event_type: zha_event

variables:
  data: "{{ trigger.event.data }}"
  switches: !input switches
  scenes: !input scenes
  scene_input: !input scene_input
  entities_on: >
    {% set scene_entities = expand(scenes) | map(attribute='attributes.entity_id') %}
    {{ expand(scene_entities)
      | selectattr('state','eq','on')
      | map(attribute='entity_id')
      | unique
      | list }}

condition:
  - condition: template
    value_template: "{{ data.device_id in switches }}"

action:
  - choose:
    - conditions:
        - "{{ data.cluster_id == 6 }}"
        - "{{ data.command == 'on' }}"
      sequence:
      - variables:
          scene: >
            {% set scene = states(scene_input) %}
            {% set index = (scenes.index(scene) + 1) % (scenes | length) if scene in scenes else 0 %}
            {{ scenes[index] }}
      - service: scene.turn_on
        target:
          entity_id: "{{ scene }}"
        data:
          transition: 1
      - service: input_text.set_value
        data:
          value: "{{ scene }}"
        target:
          entity_id: !input scene_input
    - conditions:
        - "{{ data.cluster_id == 6 }}"
        - "{{ data.command == 'off_with_effect' }}"
      sequence:
      - service: light.turn_off
        target:
          entity_id: "{{ entities_on | selectattr('domain','eq','light') | list }}"
      - service: switch.turn_off
        target:
          entity_id: "{{ entities_on | selectattr('domain','eq','switch') | list }}"
      - service: input_text.set_value
        data:
          value: ''
        target:
          entity_id: !input scene_input
    - conditions:
        - "{{ data.cluster_id == 8 }}"
        - "{{ data.command == 'step' }}"
      sequence:
      - variables:
          step_size: "{{ data.params.step_size if data.params.step_mode == 0 else -data.params.step_size }}"
      - service: light.turn_on
        target: "{{ expand(entities_on)-30 | selectattr('domain','eq','light') | list }}"
        data:
          brightness_step_pct: "{{ step_size }}"
          transition: "{{ data.params.transition_time }}"
    - conditions:
        - "{{ data.cluster_id == 64512 }}"
        - "{{ data.command in ['up_short_release','up_long_release'] }}"
      sequence:
      - service: light.turn_on
        target: "{{ expand(entities_on) | selectattr('domain','eq','light') | list }}"
        data:
          brightness_step_pct: 0
